/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormRede.java
 *
 * Created on 12/05/2011, 18:54:04
 */
package boundary.Autenticacao;

import control.Control;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import util.RegexFormatter;

/**
 *
 * @author Fernando
 */
public class FormRede extends javax.swing.JDialog {

    String _255 = "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)";
    Pattern p = Pattern.compile("^(?:" + _255 + "\\.){3}" + _255 + "$");
    RegexFormatter ipFormatter = new RegexFormatter(p);

    /**
     * Creates new form FormRede
     */
    public FormRede(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        URL url = getClass().getResource("/boundary/Icones/rede16x16.png");
        Image imagem = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagem);

        // Carrega configurações
        String ip = Control.selecionarIP();
        if ("localhost".equals(ip)) {
            rbServidor.setSelected(true);
        } else {
            rbCliente.setSelected(true);
            tfIP.setText(ip);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGroupIP = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbCliente = new javax.swing.JRadioButton();
        rbServidor = new javax.swing.JRadioButton();
        tfIP = new javax.swing.JFormattedTextField();
        btSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuração de Rede");
        setModal(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Modo:");

        buttonGroup1.add(rbCliente);
        rbCliente.setText("Cliente");
        rbCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbClienteItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rbServidor);
        rbServidor.setText("Servidor");
        rbServidor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbServidorItemStateChanged(evt);
            }
        });

        tfIP.setFormatterFactory(new DefaultFormatterFactory(ipFormatter));
        tfIP.setToolTipText("Insira o endereço IP do servidor");

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boundary/Icones/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Salvar Alterações");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        btSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btSalvarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbServidor)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCliente)
                    .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbServidor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(btSalvar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        if (validarTela()) {
            if (rbServidor.isSelected()) {
                if (Control.alterarIP("localhost")) {
                    JOptionPane.showMessageDialog(null, "Configuração atualizada com sucesso!", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao atualizar configuração!", "Erro!", JOptionPane.ERROR_MESSAGE);
                }
            } else if (rbCliente.isSelected()) {
                if (Control.alterarIP(tfIP.getText())) {
                    JOptionPane.showMessageDialog(null, "Configuração atualizada com sucesso!", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao atualizar configuração!", "Erro!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btSalvarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 27) {
            this.dispose();
        }
    }//GEN-LAST:event_btSalvarKeyPressed

    private void rbServidorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbServidorItemStateChanged
        // TODO add your handling code here:
        tfIP.setEnabled(false);
        tfIP.setText("");
    }//GEN-LAST:event_rbServidorItemStateChanged

    private void rbClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbClienteItemStateChanged
        // TODO add your handling code here:
        tfIP.setEnabled(true);
    }//GEN-LAST:event_rbClienteItemStateChanged

    public boolean validarTela() {
        if (rbCliente.isSelected()) {
            if (tfIP.getText().length() != 0) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Digite o endereço IP!", "Confirmação!", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btGroupIP;
    private javax.swing.JButton btSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbCliente;
    private javax.swing.JRadioButton rbServidor;
    private javax.swing.JFormattedTextField tfIP;
    // End of variables declaration//GEN-END:variables
}
